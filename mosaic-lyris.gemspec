# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{mosaic-lyris}
  s.version = "1.0.1"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["S. Brent Faulkner"]
  s.date = %q{2013-03-07}
  s.description = %q{A wrapper for the Lyris/EmailLabs API to simplify integration}
  s.email = %q{brent.faulkner@mosaic.com}
  s.extra_rdoc_files = [
    "README"
  ]
  s.files = [
    "Gemfile",
    "README",
    "Rakefile",
    "VERSION",
    "init.rb",
    "lib/lyris.rb",
    "lib/mosaic/lyris.rb",
    "lib/mosaic/lyris/demographic.rb",
    "lib/mosaic/lyris/filter.rb",
    "lib/mosaic/lyris/list.rb",
    "lib/mosaic/lyris/message.rb",
    "lib/mosaic/lyris/object.rb",
    "lib/mosaic/lyris/partner.rb",
    "lib/mosaic/lyris/record.rb",
    "lib/mosaic/lyris/trigger.rb",
    "lib/mosaic/lyris/upload.rb",
    "lib/mosaic/lyris_mailer.rb",
    "mosaic-lyris.gemspec",
    "test/demographic_test.rb",
    "test/filter_test.rb",
    "test/http_responder.rb",
    "test/list_test.rb",
    "test/message_test.rb",
    "test/partner_test.rb",
    "test/record_test.rb",
    "test/responses/demographic/add_error_name_already_exists.xml",
    "test/responses/demographic/add_success_12345.xml",
    "test/responses/demographic/query_all_success.xml",
    "test/responses/demographic/query_enabled_details_success.xml",
    "test/responses/demographic/query_enabled_success.xml",
    "test/responses/list/add_error_name_already_exists.xml",
    "test/responses/list/add_success_12345.xml",
    "test/responses/list/delete_error_not_found_99999.xml",
    "test/responses/list/delete_success_12345.xml",
    "test/responses/list/query_list_data_success.xml",
    "test/responses/record/add_error_email_already_exists.xml",
    "test/responses/record/add_success.xml",
    "test/responses/record/query_all_success.xml",
    "test/responses/record/query_all_success_empty.xml",
    "test/responses/record/query_all_success_page_1.xml",
    "test/responses/record/query_all_success_page_2.xml",
    "test/responses/record/query_all_success_page_3.xml",
    "test/responses/record/query_email_error_not_found.xml",
    "test/responses/record/query_email_success_active.xml",
    "test/responses/record/query_email_success_admin_trashed.xml",
    "test/responses/record/query_email_success_bounced.xml",
    "test/responses/record/query_email_success_unsubscribed.xml",
    "test/responses/record/update_error_not_found.xml",
    "test/responses/record/update_success.xml",
    "test/responses/triggers/fire_error_invalid_recipients.xml",
    "test/responses/triggers/fire_error_invalid_trigger_id.xml",
    "test/responses/triggers/fire_success.xml",
    "test/test_helper.rb",
    "test/trigger_test.rb"
  ]
  s.homepage = %q{http://github.com/mosaicxm/mosaic-lyris}
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.6}
  s.summary = %q{Lyris/EmailLabs API}

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<mosaic-lyris>, [">= 0"])
      s.add_development_dependency(%q<jeweler>, [">= 0"])
      s.add_development_dependency(%q<jeweler>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
      s.add_runtime_dependency(%q<builder>, [">= 0"])
      s.add_runtime_dependency(%q<active_support>, [">= 0"])
      s.add_runtime_dependency(%q<htmlentities>, [">= 0"])
      s.add_runtime_dependency(%q<nokogiri>, [">= 0"])
      s.add_runtime_dependency(%q<tzinfo>, [">= 0"])
      s.add_development_dependency(%q<mocha>, [">= 0"])
    else
      s.add_dependency(%q<mosaic-lyris>, [">= 0"])
      s.add_dependency(%q<jeweler>, [">= 0"])
      s.add_dependency(%q<jeweler>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
      s.add_dependency(%q<builder>, [">= 0"])
      s.add_dependency(%q<active_support>, [">= 0"])
      s.add_dependency(%q<htmlentities>, [">= 0"])
      s.add_dependency(%q<nokogiri>, [">= 0"])
      s.add_dependency(%q<tzinfo>, [">= 0"])
      s.add_dependency(%q<mocha>, [">= 0"])
    end
  else
    s.add_dependency(%q<mosaic-lyris>, [">= 0"])
    s.add_dependency(%q<jeweler>, [">= 0"])
    s.add_dependency(%q<jeweler>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
    s.add_dependency(%q<builder>, [">= 0"])
    s.add_dependency(%q<active_support>, [">= 0"])
    s.add_dependency(%q<htmlentities>, [">= 0"])
    s.add_dependency(%q<nokogiri>, [">= 0"])
    s.add_dependency(%q<tzinfo>, [">= 0"])
    s.add_dependency(%q<mocha>, [">= 0"])
  end
end

